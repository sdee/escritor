{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sutee.dee/src/escritor/web/pages/post.js\";\nimport { useRouter } from 'next/router';\nimport client from '../../client';\n\nconst Post = () => {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: router.query.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    title = \"\"\n  } = context.query;\n  return await client.fetch(`\n      *[_type == \"post\"][0]\n    `, {\n    title\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/sutee.dee/src/escritor/web/pages/post.js"],"names":["useRouter","client","Post","router","query","title","getInitialProps","context","fetch"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,sBAAQ;AAAA,4BACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAEJ;AAAA,gBAAKG,MAAM,CAACC,KAAP,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFI;AAAA,kBAAR;AAKD,CARD;;AAUAH,IAAI,CAACI,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC3C;AACA,QAAM;AAAEF,IAAAA,KAAK,GAAG;AAAV,MAAiBE,OAAO,CAACH,KAA/B;AACA,SAAO,MAAMH,MAAM,CAACO,KAAP,CAAc;AAC/B;AACA,KAFiB,EAEV;AAAEH,IAAAA;AAAF,GAFU,CAAb;AAGD,CANH;;AAQA,eAAeH,IAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport client from '../../client'\n\nconst Post = () => {\n  const router = useRouter()\n  \n  return (<>\n        <h1>test</h1>\n      <h2>{router.query.title}</h2>\n      </>\n  )\n}\n\nPost.getInitialProps = async function(context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { title = \"\" } = context.query\n    return await client.fetch(`\n      *[_type == \"post\"][0]\n    `, { title })\n  }\n\nexport default Post"]},"metadata":{},"sourceType":"module"}