"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DateInput = void 0;

var _react = _interopRequireDefault(require("react"));

var _CommonDateTimeInput = require("./CommonDateTimeInput");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// This is the format dates are stored on
var VALUE_FORMAT = 'YYYY-MM-DD'; // default to how they are stored

var DEFAULT_DATE_FORMAT = VALUE_FORMAT;

function parseOptions() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return {
    dateFormat: options.dateFormat || DEFAULT_DATE_FORMAT,
    calendarTodayLabel: options.calendarTodayLabel || 'Today'
  };
}

var DateInput = /*#__PURE__*/_react.default.forwardRef(function DateInput(props, forwardedRef) {
  var type = props.type,
      rest = _objectWithoutProperties(props, ["type"]);

  var title = type.title,
      description = type.description,
      placeholder = type.placeholder;

  var _parseOptions = parseOptions(type.options),
      dateFormat = _parseOptions.dateFormat;

  return /*#__PURE__*/_react.default.createElement(_CommonDateTimeInput.CommonDateTimeInput, _extends({}, rest, {
    ref: forwardedRef,
    selectTime: false,
    title: title,
    description: description,
    placeholder: placeholder,
    inputFormat: dateFormat
  }));
});

exports.DateInput = DateInput;